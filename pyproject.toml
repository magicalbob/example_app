[project]
name = "example_app"
version = "0.1.0"
description = "A minimal CLI tool to print all prime numbers below a given maximum."
readme = "README.md"
requires-python = ">=3.7"
license = { text = "GPL-3.0-or-later" }
authors = [
    { name = "Ian Ellis", email = "ellisiana@gmail.com" }
]
keywords = ["prime", "cli", "argparse", "educational", "math"]

[project.urls]
Homepage = "https://github.com/magicalbob/example_app"
Repository = "https://github.com/magicalbob/example_app"
Issues = "https://github.com/magicalbob/example_app/issues"

[tool.setuptools]
packages = ["example_app"]
package-dir = { "" = "src" }

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "coverage>=7.0",
    "twine>=4.0",
    "build>=1.0",
    "pip-tools>=6.0",
    "pre-commit>=3.0"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "-v"
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"
